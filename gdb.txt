Dump of assembler code for function main:
   0x000300ac <+0>:	55	push   %ebp
   0x000300ad <+1>:	89 e5	mov    %esp,%ebp
   0x000300af <+3>:	83 ec 10	sub    $0x10,%esp
   0x000300b2 <+6>:	e8 63 01 00 00	call   0x3021a <__x86.get_pc_thunk.ax>
   0x000300b7 <+11>:	05 49 1f 00 00	add    $0x1f49,%eax
   0x000300bc <+16>:	c6 45 fe aa	movb   $0xaa,-0x2(%ebp)
   0x000300c0 <+20>:	6a 00	push   $0x0
   0x000300c2 <+22>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000300c5 <+25>:	50	push   %eax
   0x000300c6 <+26>:	e8 3a ff ff ff	call   0x30005 <getbit>
   0x000300cb <+31>:	83 c4 08	add    $0x8,%esp
   0x000300ce <+34>:	84 c0	test   %al,%al
   0x000300d0 <+36>:	74 06	je     0x300d8 <main+44>
   0x000300d2 <+38>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300d7 <+43>:	82	(bad)  
   0x000300d8 <+44>:	6a 01	push   $0x1
   0x000300da <+46>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000300dd <+49>:	50	push   %eax
   0x000300de <+50>:	e8 22 ff ff ff	call   0x30005 <getbit>
   0x000300e3 <+55>:	83 c4 08	add    $0x8,%esp
   0x000300e6 <+58>:	3c 01	cmp    $0x1,%al
   0x000300e8 <+60>:	74 06	je     0x300f0 <main+68>
   0x000300ea <+62>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300ef <+67>:	82	(bad)  
   0x000300f0 <+68>:	6a 02	push   $0x2
   0x000300f2 <+70>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000300f5 <+73>:	50	push   %eax
   0x000300f6 <+74>:	e8 0a ff ff ff	call   0x30005 <getbit>
   0x000300fb <+79>:	83 c4 08	add    $0x8,%esp
   0x000300fe <+82>:	84 c0	test   %al,%al
   0x00030100 <+84>:	74 06	je     0x30108 <main+92>
   0x00030102 <+86>:	b8 01 00 00 00	mov    $0x1,%eax
   0x00030107 <+91>:	82	(bad)  
   0x00030108 <+92>:	6a 03	push   $0x3
   0x0003010a <+94>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x0003010d <+97>:	50	push   %eax
   0x0003010e <+98>:	e8 f2 fe ff ff	call   0x30005 <getbit>
   0x00030113 <+103>:	83 c4 08	add    $0x8,%esp
   0x00030116 <+106>:	3c 01	cmp    $0x1,%al
   0x00030118 <+108>:	74 06	je     0x30120 <main+116>
   0x0003011a <+110>:	b8 01 00 00 00	mov    $0x1,%eax
   0x0003011f <+115>:	82	(bad)  
   0x00030120 <+116>:	6a 04	push   $0x4
   0x00030122 <+118>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x00030125 <+121>:	50	push   %eax
   0x00030126 <+122>:	e8 da fe ff ff	call   0x30005 <getbit>
   0x0003012b <+127>:	83 c4 08	add    $0x8,%esp
   0x0003012e <+130>:	84 c0	test   %al,%al
   0x00030130 <+132>:	74 06	je     0x30138 <main+140>
   0x00030132 <+134>:	b8 01 00 00 00	mov    $0x1,%eax
   0x00030137 <+139>:	82	(bad)  
   0x00030138 <+140>:	6a 05	push   $0x5
   0x0003013a <+142>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x0003013d <+145>:	50	push   %eax
   0x0003013e <+146>:	e8 c2 fe ff ff	call   0x30005 <getbit>
   0x00030143 <+151>:	83 c4 08	add    $0x8,%esp
   0x00030146 <+154>:	3c 01	cmp    $0x1,%al
   0x00030148 <+156>:	74 06	je     0x30150 <main+164>
   0x0003014a <+158>:	b8 01 00 00 00	mov    $0x1,%eax
   0x0003014f <+163>:	82	(bad)  
   0x00030150 <+164>:	6a 06	push   $0x6
   0x00030152 <+166>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x00030155 <+169>:	50	push   %eax
   0x00030156 <+170>:	e8 aa fe ff ff	call   0x30005 <getbit>
   0x0003015b <+175>:	83 c4 08	add    $0x8,%esp
   0x0003015e <+178>:	84 c0	test   %al,%al
   0x00030160 <+180>:	74 06	je     0x30168 <main+188>
   0x00030162 <+182>:	b8 01 00 00 00	mov    $0x1,%eax
   0x00030167 <+187>:	82	(bad)  
   0x00030168 <+188>:	6a 07	push   $0x7
   0x0003016a <+190>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x0003016d <+193>:	50	push   %eax
   0x0003016e <+194>:	e8 92 fe ff ff	call   0x30005 <getbit>
   0x00030173 <+199>:	83 c4 08	add    $0x8,%esp
   0x00030176 <+202>:	3c 01	cmp    $0x1,%al
   0x00030178 <+204>:	74 06	je     0x30180 <main+212>
   0x0003017a <+206>:	b8 01 00 00 00	mov    $0x1,%eax
   0x0003017f <+211>:	82	(bad)  
   0x00030180 <+212>:	6a 01	push   $0x1
   0x00030182 <+214>:	6a 08	push   $0x8
   0x00030184 <+216>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x00030187 <+219>:	50	push   %eax
   0x00030188 <+220>:	e8 ba fe ff ff	call   0x30047 <setbit>
   0x0003018d <+225>:	83 c4 0c	add    $0xc,%esp
   0x00030190 <+228>:	6a 00	push   $0x0
   0x00030192 <+230>:	6a 09	push   $0x9
   0x00030194 <+232>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x00030197 <+235>:	50	push   %eax
   0x00030198 <+236>:	e8 aa fe ff ff	call   0x30047 <setbit>
   0x0003019d <+241>:	83 c4 0c	add    $0xc,%esp
   0x000301a0 <+244>:	6a 01	push   $0x1
   0x000301a2 <+246>:	6a 0a	push   $0xa
   0x000301a4 <+248>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301a7 <+251>:	50	push   %eax
   0x000301a8 <+252>:	e8 9a fe ff ff	call   0x30047 <setbit>
   0x000301ad <+257>:	83 c4 0c	add    $0xc,%esp
   0x000301b0 <+260>:	6a 00	push   $0x0
   0x000301b2 <+262>:	6a 0b	push   $0xb
   0x000301b4 <+264>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301b7 <+267>:	50	push   %eax
   0x000301b8 <+268>:	e8 8a fe ff ff	call   0x30047 <setbit>
   0x000301bd <+273>:	83 c4 0c	add    $0xc,%esp
   0x000301c0 <+276>:	6a 01	push   $0x1
   0x000301c2 <+278>:	6a 0c	push   $0xc
   0x000301c4 <+280>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301c7 <+283>:	50	push   %eax
   0x000301c8 <+284>:	e8 7a fe ff ff	call   0x30047 <setbit>
   0x000301cd <+289>:	83 c4 0c	add    $0xc,%esp
   0x000301d0 <+292>:	6a 00	push   $0x0
   0x000301d2 <+294>:	6a 0d	push   $0xd
   0x000301d4 <+296>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301d7 <+299>:	50	push   %eax
   0x000301d8 <+300>:	e8 6a fe ff ff	call   0x30047 <setbit>
   0x000301dd <+305>:	83 c4 0c	add    $0xc,%esp
   0x000301e0 <+308>:	6a 01	push   $0x1
   0x000301e2 <+310>:	6a 0e	push   $0xe
   0x000301e4 <+312>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301e7 <+315>:	50	push   %eax
   0x000301e8 <+316>:	e8 5a fe ff ff	call   0x30047 <setbit>
   0x000301ed <+321>:	83 c4 0c	add    $0xc,%esp
   0x000301f0 <+324>:	6a 00	push   $0x0
   0x000301f2 <+326>:	6a 0f	push   $0xf
   0x000301f4 <+328>:	8d 45 fe	lea    -0x2(%ebp),%eax
   0x000301f7 <+331>:	50	push   %eax
   0x000301f8 <+332>:	e8 4a fe ff ff	call   0x30047 <setbit>
   0x000301fd <+337>:	83 c4 0c	add    $0xc,%esp
   0x00030200 <+340>:	8a 45 ff	mov    -0x1(%ebp),%al
   0x00030203 <+343>:	3c 55	cmp    $0x55,%al
   0x00030205 <+345>:	74 06	je     0x3020d <main+353>
   0x00030207 <+347>:	b8 01 00 00 00	mov    $0x1,%eax
   0x0003020c <+352>:	82	(bad)  
   0x0003020d <+353>:	b8 00 00 00 00	mov    $0x0,%eax
   0x00030212 <+358>:	82	(bad)  
   0x00030213 <+359>:	b8 00 00 00 00	mov    $0x0,%eax
   0x00030218 <+364>:	c9	leave  
   0x00030219 <+365>:	c3	ret    
End of assembler dump.
