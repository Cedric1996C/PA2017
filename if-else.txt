Dump of assembler code for function main:
   0x00030063 <+0>:	55	push   %ebp
   0x00030064 <+1>:	89 e5	mov    %esp,%ebp
   0x00030066 <+3>:	53	push   %ebx
   0x00030067 <+4>:	83 ec 10	sub    $0x10,%esp
   0x0003006a <+7>:	e8 64 00 00 00	call   0x300d3 <__x86.get_pc_thunk.bx>
   0x0003006f <+12>:	81 c3 91 1f 00 00	add    $0x1f91,%ebx
   0x00030075 <+18>:	c7 45 f4 00 00 00 00	movl   $0x0,-0xc(%ebp)
   0x0003007c <+25>:	c7 45 f8 00 00 00 00	movl   $0x0,-0x8(%ebp)
   0x00030083 <+32>:	eb 32	jmp    0x300b7 <main+84>
   0x00030085 <+34>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x00030088 <+37>:	8b 84 83 20 00 00 00	mov    0x20(%ebx,%eax,4),%eax
   0x0003008f <+44>:	50	push   %eax
   0x00030090 <+45>:	e8 70 ff ff ff	call   0x30005 <if_else>
   0x00030095 <+50>:	83 c4 04	add    $0x4,%esp
   0x00030098 <+53>:	89 c1	mov    %eax,%ecx
   0x0003009a <+55>:	8b 45 f4	mov    -0xc(%ebp),%eax
   0x0003009d <+58>:	8d 50 01	lea    0x1(%eax),%edx
   0x000300a0 <+61>:	89 55 f4	mov    %edx,-0xc(%ebp)
   0x000300a3 <+64>:	8b 84 83 60 00 00 00	mov    0x60(%ebx,%eax,4),%eax
   0x000300aa <+71>:	39 c1	cmp    %eax,%ecx
   0x000300ac <+73>:	74 06	je     0x300b4 <main+81>
   0x000300ae <+75>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300b3 <+80>:	82	(bad)  
   0x000300b4 <+81>:	ff 45 f8	incl   -0x8(%ebp)
   0x000300b7 <+84>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x000300ba <+87>:	83 f8 0d	cmp    $0xd,%eax
   0x000300bd <+90>:	76 c6	jbe    0x30085 <main+34>
   0x000300bf <+92>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300c4 <+97>:	82	(bad)  
   0x000300c5 <+98>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300ca <+103>:	8b 5d fc	mov    -0x4(%ebp),%ebx
   0x000300cd <+106>:	c9	leave  
   0x000300ce <+107>:	c3	ret    
End of assembler dump.
Dump of assembler code for function main:
   0x00030063 <+0>:	55	push   %ebp
   0x00030064 <+1>:	89 e5	mov    %esp,%ebp
   0x00030066 <+3>:	53	push   %ebx
   0x00030067 <+4>:	83 ec 10	sub    $0x10,%esp
   0x0003006a <+7>:	e8 64 00 00 00	call   0x300d3 <__x86.get_pc_thunk.bx>
   0x0003006f <+12>:	81 c3 91 1f 00 00	add    $0x1f91,%ebx
   0x00030075 <+18>:	c7 45 f4 00 00 00 00	movl   $0x0,-0xc(%ebp)
   0x0003007c <+25>:	c7 45 f8 00 00 00 00	movl   $0x0,-0x8(%ebp)
   0x00030083 <+32>:	eb 32	jmp    0x300b7 <main+84>
   0x00030085 <+34>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x00030088 <+37>:	8b 84 83 20 00 00 00	mov    0x20(%ebx,%eax,4),%eax
   0x0003008f <+44>:	50	push   %eax
   0x00030090 <+45>:	e8 70 ff ff ff	call   0x30005 <if_else>
   0x00030095 <+50>:	83 c4 04	add    $0x4,%esp
   0x00030098 <+53>:	89 c1	mov    %eax,%ecx
   0x0003009a <+55>:	8b 45 f4	mov    -0xc(%ebp),%eax
   0x0003009d <+58>:	8d 50 01	lea    0x1(%eax),%edx
   0x000300a0 <+61>:	89 55 f4	mov    %edx,-0xc(%ebp)
   0x000300a3 <+64>:	8b 84 83 60 00 00 00	mov    0x60(%ebx,%eax,4),%eax
   0x000300aa <+71>:	39 c1	cmp    %eax,%ecx
   0x000300ac <+73>:	74 06	je     0x300b4 <main+81>
   0x000300ae <+75>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300b3 <+80>:	82	(bad)  
   0x000300b4 <+81>:	ff 45 f8	incl   -0x8(%ebp)
   0x000300b7 <+84>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x000300ba <+87>:	83 f8 0d	cmp    $0xd,%eax
   0x000300bd <+90>:	76 c6	jbe    0x30085 <main+34>
   0x000300bf <+92>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300c4 <+97>:	82	(bad)  
   0x000300c5 <+98>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300ca <+103>:	8b 5d fc	mov    -0x4(%ebp),%ebx
   0x000300cd <+106>:	c9	leave  
   0x000300ce <+107>:	c3	ret    
End of assembler dump.
Dump of assembler code for function main:
   0x00030063 <+0>:	55	push   %ebp
   0x00030064 <+1>:	89 e5	mov    %esp,%ebp
   0x00030066 <+3>:	53	push   %ebx
   0x00030067 <+4>:	83 ec 10	sub    $0x10,%esp
   0x0003006a <+7>:	e8 64 00 00 00	call   0x300d3 <__x86.get_pc_thunk.bx>
   0x0003006f <+12>:	81 c3 91 1f 00 00	add    $0x1f91,%ebx
   0x00030075 <+18>:	c7 45 f4 00 00 00 00	movl   $0x0,-0xc(%ebp)
   0x0003007c <+25>:	c7 45 f8 00 00 00 00	movl   $0x0,-0x8(%ebp)
   0x00030083 <+32>:	eb 32	jmp    0x300b7 <main+84>
   0x00030085 <+34>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x00030088 <+37>:	8b 84 83 20 00 00 00	mov    0x20(%ebx,%eax,4),%eax
   0x0003008f <+44>:	50	push   %eax
   0x00030090 <+45>:	e8 70 ff ff ff	call   0x30005 <if_else>
   0x00030095 <+50>:	83 c4 04	add    $0x4,%esp
   0x00030098 <+53>:	89 c1	mov    %eax,%ecx
   0x0003009a <+55>:	8b 45 f4	mov    -0xc(%ebp),%eax
   0x0003009d <+58>:	8d 50 01	lea    0x1(%eax),%edx
   0x000300a0 <+61>:	89 55 f4	mov    %edx,-0xc(%ebp)
   0x000300a3 <+64>:	8b 84 83 60 00 00 00	mov    0x60(%ebx,%eax,4),%eax
   0x000300aa <+71>:	39 c1	cmp    %eax,%ecx
   0x000300ac <+73>:	74 06	je     0x300b4 <main+81>
   0x000300ae <+75>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300b3 <+80>:	82	(bad)  
   0x000300b4 <+81>:	ff 45 f8	incl   -0x8(%ebp)
   0x000300b7 <+84>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x000300ba <+87>:	83 f8 0d	cmp    $0xd,%eax
   0x000300bd <+90>:	76 c6	jbe    0x30085 <main+34>
   0x000300bf <+92>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300c4 <+97>:	82	(bad)  
   0x000300c5 <+98>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300ca <+103>:	8b 5d fc	mov    -0x4(%ebp),%ebx
   0x000300cd <+106>:	c9	leave  
   0x000300ce <+107>:	c3	ret    
End of assembler dump.
Dump of assembler code for function main:
   0x00030063 <+0>:	55	push   %ebp
   0x00030064 <+1>:	89 e5	mov    %esp,%ebp
   0x00030066 <+3>:	53	push   %ebx
   0x00030067 <+4>:	83 ec 10	sub    $0x10,%esp
   0x0003006a <+7>:	e8 64 00 00 00	call   0x300d3 <__x86.get_pc_thunk.bx>
   0x0003006f <+12>:	81 c3 91 1f 00 00	add    $0x1f91,%ebx
   0x00030075 <+18>:	c7 45 f4 00 00 00 00	movl   $0x0,-0xc(%ebp)
   0x0003007c <+25>:	c7 45 f8 00 00 00 00	movl   $0x0,-0x8(%ebp)
   0x00030083 <+32>:	eb 32	jmp    0x300b7 <main+84>
   0x00030085 <+34>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x00030088 <+37>:	8b 84 83 20 00 00 00	mov    0x20(%ebx,%eax,4),%eax
   0x0003008f <+44>:	50	push   %eax
   0x00030090 <+45>:	e8 70 ff ff ff	call   0x30005 <if_else>
   0x00030095 <+50>:	83 c4 04	add    $0x4,%esp
   0x00030098 <+53>:	89 c1	mov    %eax,%ecx
   0x0003009a <+55>:	8b 45 f4	mov    -0xc(%ebp),%eax
   0x0003009d <+58>:	8d 50 01	lea    0x1(%eax),%edx
   0x000300a0 <+61>:	89 55 f4	mov    %edx,-0xc(%ebp)
   0x000300a3 <+64>:	8b 84 83 60 00 00 00	mov    0x60(%ebx,%eax,4),%eax
   0x000300aa <+71>:	39 c1	cmp    %eax,%ecx
   0x000300ac <+73>:	74 06	je     0x300b4 <main+81>
   0x000300ae <+75>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300b3 <+80>:	82	(bad)  
   0x000300b4 <+81>:	ff 45 f8	incl   -0x8(%ebp)
   0x000300b7 <+84>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x000300ba <+87>:	83 f8 0d	cmp    $0xd,%eax
   0x000300bd <+90>:	76 c6	jbe    0x30085 <main+34>
   0x000300bf <+92>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300c4 <+97>:	82	(bad)  
   0x000300c5 <+98>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300ca <+103>:	8b 5d fc	mov    -0x4(%ebp),%ebx
   0x000300cd <+106>:	c9	leave  
   0x000300ce <+107>:	c3	ret    
End of assembler dump.
Dump of assembler code for function if_else:
   0x00030005 <+0>:	55	push   %ebp
   0x00030006 <+1>:	89 e5	mov    %esp,%ebp
   0x00030008 <+3>:	83 ec 10	sub    $0x10,%esp
   0x0003000b <+6>:	e8 bf 00 00 00	call   0x300cf <__x86.get_pc_thunk.ax>
   0x00030010 <+11>:	05 f0 1f 00 00	add    $0x1ff0,%eax
   0x00030015 <+16>:	81 7d 08 f4 01 00 00	cmpl   $0x1f4,0x8(%ebp)
   0x0003001c <+23>:	7e 09	jle    0x30027 <if_else+34>
   0x0003001e <+25>:	c7 45 fc 96 00 00 00	movl   $0x96,-0x4(%ebp)
   0x00030025 <+32>:	eb 37	jmp    0x3005e <if_else+89>
   0x00030027 <+34>:	81 7d 08 2c 01 00 00	cmpl   $0x12c,0x8(%ebp)
   0x0003002e <+41>:	7e 09	jle    0x30039 <if_else+52>
   0x00030030 <+43>:	c7 45 fc 64 00 00 00	movl   $0x64,-0x4(%ebp)
   0x00030037 <+50>:	eb 25	jmp    0x3005e <if_else+89>
   0x00030039 <+52>:	83 7d 08 64	cmpl   $0x64,0x8(%ebp)
   0x0003003d <+56>:	7e 09	jle    0x30048 <if_else+67>
   0x0003003f <+58>:	c7 45 fc 4b 00 00 00	movl   $0x4b,-0x4(%ebp)
   0x00030046 <+65>:	eb 16	jmp    0x3005e <if_else+89>
   0x00030048 <+67>:	83 7d 08 32	cmpl   $0x32,0x8(%ebp)
   0x0003004c <+71>:	7e 09	jle    0x30057 <if_else+82>
   0x0003004e <+73>:	c7 45 fc 32 00 00 00	movl   $0x32,-0x4(%ebp)
   0x00030055 <+80>:	eb 07	jmp    0x3005e <if_else+89>
   0x00030057 <+82>:	c7 45 fc 00 00 00 00	movl   $0x0,-0x4(%ebp)
   0x0003005e <+89>:	8b 45 fc	mov    -0x4(%ebp),%eax
   0x00030061 <+92>:	c9	leave  
   0x00030062 <+93>:	c3	ret    
End of assembler dump.
Dump of assembler code for function main:
   0x00030063 <+0>:	55	push   %ebp
   0x00030064 <+1>:	89 e5	mov    %esp,%ebp
   0x00030066 <+3>:	53	push   %ebx
   0x00030067 <+4>:	83 ec 10	sub    $0x10,%esp
   0x0003006a <+7>:	e8 64 00 00 00	call   0x300d3 <__x86.get_pc_thunk.bx>
   0x0003006f <+12>:	81 c3 91 1f 00 00	add    $0x1f91,%ebx
   0x00030075 <+18>:	c7 45 f4 00 00 00 00	movl   $0x0,-0xc(%ebp)
   0x0003007c <+25>:	c7 45 f8 00 00 00 00	movl   $0x0,-0x8(%ebp)
   0x00030083 <+32>:	eb 32	jmp    0x300b7 <main+84>
   0x00030085 <+34>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x00030088 <+37>:	8b 84 83 20 00 00 00	mov    0x20(%ebx,%eax,4),%eax
   0x0003008f <+44>:	50	push   %eax
   0x00030090 <+45>:	e8 70 ff ff ff	call   0x30005 <if_else>
   0x00030095 <+50>:	83 c4 04	add    $0x4,%esp
   0x00030098 <+53>:	89 c1	mov    %eax,%ecx
   0x0003009a <+55>:	8b 45 f4	mov    -0xc(%ebp),%eax
   0x0003009d <+58>:	8d 50 01	lea    0x1(%eax),%edx
   0x000300a0 <+61>:	89 55 f4	mov    %edx,-0xc(%ebp)
   0x000300a3 <+64>:	8b 84 83 60 00 00 00	mov    0x60(%ebx,%eax,4),%eax
   0x000300aa <+71>:	39 c1	cmp    %eax,%ecx
   0x000300ac <+73>:	74 06	je     0x300b4 <main+81>
   0x000300ae <+75>:	b8 01 00 00 00	mov    $0x1,%eax
   0x000300b3 <+80>:	82	(bad)  
   0x000300b4 <+81>:	ff 45 f8	incl   -0x8(%ebp)
   0x000300b7 <+84>:	8b 45 f8	mov    -0x8(%ebp),%eax
   0x000300ba <+87>:	83 f8 0d	cmp    $0xd,%eax
   0x000300bd <+90>:	76 c6	jbe    0x30085 <main+34>
   0x000300bf <+92>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300c4 <+97>:	82	(bad)  
   0x000300c5 <+98>:	b8 00 00 00 00	mov    $0x0,%eax
   0x000300ca <+103>:	8b 5d fc	mov    -0x4(%ebp),%ebx
   0x000300cd <+106>:	c9	leave  
   0x000300ce <+107>:	c3	ret    
End of assembler dump.
